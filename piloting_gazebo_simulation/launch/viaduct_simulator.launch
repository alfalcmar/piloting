<launch>

	<arg name="multi" default="false"/>
    <arg name="ns_prefix" default="uav_"/>

    <arg name="ual_server" default="on"/>
    <arg name="ual_pub_rate" default="30.0"/>

    <arg name="mode" default="sitl"/>
    <arg name="robot_model" default="mbzirc"/>

    <arg name="pose_frame_id" default=""/><!-- To publish ual/pose in other frame than local, e.g. map -->
    <arg name="mavros_offboard_rate" default="30.0"/>
    <arg name="position_th" default="0.33"/>
    <arg name="orientation_th" default="0.65"/>
    <arg name="hold_pose_time" default="3.0"/>
    <!-- Launch Gazebo simulation -->
	<rosparam param="/use_sim_time">true</rosparam>
    <node pkg="px4_bringup" type="launch_gzworld.py" name="gazebo_world" output="screen"
    args="-physics=ode -world=$(find piloting_gazebo_simulation)/worlds/piloting_scenario.world
		  -add_model_path=$(find piloting_gazebo_simulation)/models
		  -description_package=piloting_gazebo_simulation">
		<rosparam param="sim_origin">[54.193125, 10.128319, 0]</rosparam>  <!-- [lat,lon,alt] -->
	</node>

	<include file="$(find px4_bringup)/launch/spawn_robot.launch" unless="$(arg multi)">
        <arg name="id" value="1"/>
        <arg name="material" value="Orange"/>
        <arg name="mode" value="$(arg mode)"/>
        <arg name="x" value="0"/>
        <arg name="y" value="0"/>
        <arg name="z" value="0"/>
        <arg name="yaw" value="0"/>
        <arg name="robot_model" value="$(arg robot_model)"/>
		<arg name="description_package" value="piloting_gazebo_simulation"/>
    </include>

	 <node pkg="ual_backend_mavros" type="ual_backend_mavros_server" name="ual" output="screen" unless="$(arg multi)">
        <param name="uav_id" value="1"/>
        <param name="ual_server" value="$(arg ual_server)"/>
        <param name="ual_pub_rate" value="$(arg ual_pub_rate)"/>
        <param name="mavros_offboard_rate" value="$(arg mavros_offboard_rate)"/>
        <param name="position_th" value="$(arg position_th)"/>
        <param name="orientation_th" value="$(arg orientation_th)"/>
        <param name="hold_pose_time" value="$(arg hold_pose_time)"/>
        <param name="pose_frame_id" value="$(arg pose_frame_id)"/>
        <param name="home_pose_parent_frame" value="map"/><!-- default= map -->
        <!-- Define home pose relative to global map frame -->
        <rosparam param="home_pose">[0, 0, 0]</rosparam><!-- [x,y,z] -->
        <!-- Define the global map frame geo position and let the UAL estimate the relative home pose -->
        <!-- <rosparam param="map_origin_geo">[37.558542, -5.931074, 7.89]</rosparam> --><!-- [lat,lon,alt] -->
    </node>

</launch>
